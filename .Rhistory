select(pdiabtst,X_totinda)
tableDiab <- table(diabexer$X_totinda,diabexer$pdiabtst)
mosaicplot(tableDiab)
grep("grend",names(brfss2013),value=TRUE)
brfss2013$grenday_[1:40]
range(brfss2013$grenday_)
range(brfss2013$grenday_,na.rm)
brfss2013$grenday_[1:400]
brfss2013 <- brfss2013 %>%
filter(!is.na(grenday_)) %>%
mutate(grencol = floor(grenday_/10))
diagren <- brfss2013 %>%
filter(!is.na(pdiabtst),!is.na(grencol)) %>%
select(pdiabtst,grencol)
tableDiab2 <- table(diagren$grencol,diagren$pdiabtst)
mosaicplot(tableDiab2)
?mosaicplot
install.packages(vcd)
install.packages("vcd")
install.packages("vcd")
library(dplyr)
library(ggplot2)
library(vcd)
load("C:/Users/Sandesh/Desktop/Coursera/Intro to data analysis/brfss2013.RData")
?mosaicplot
?mosaic
que1db <- brfss2013 %>%
d
brfss2013$X_smoker3[1:100]
brfss2013 %>%
group_by(X_smoker3) %>%
summarise(n())
brfss2013 %>%
group_by(X_rfhlth) %>%
summarise(n())
brfss2013 %>%
group_by(X_rfbmi5) %>%
summarise(n())
brfss2013 %>%
group_by(X_drnkany5) %>%
summarise(n())
brfss2013 %>%
group_by(drnkany5) %>%
summarise(n())
que1db <- brfss2013 %>%
filter(!is.na(X_rfhlth),!is.na(drnkany5),!is.na(X_smoker3)) %>%
select(X_smoker3,drnkany5,X_rfhlth)
table(X_smoker3,X_rfhlth)
table(brfss2013$X_smoker3,brfss2013$X_rfhlth)
que1tb <- table(brfss2013$X_smoker3,brfss2013$X_rfhlth)
dimnames(que1tb)
dimnames <- rbind(c(1,2,3,4),c(1,2))
rm(dimnames)
dimnames(que1tb) <- rbind(c(1,2,3,4),c(1,2))
dimnames(que1tb) <- list(c(1,2,3,4),c(1,2))
que1tb
mosaicplot(que1tb)
mosaicplot(que1tb,shade=TRUE)
mosaicplot(que1tb,color=TRUE)
mosaicplot(que1tb,color=TRUE,main="Smoking Level Vs. General Health",xlab="Smoking level in increasing order",ylab="General Health State")
que1tb2 <- table(brfss2013$drnkany5,brfss2013$X_rfhlth)
dimnames(que1tb2) <- list(c("Healthy","Unhealthy"),c("Alcoholic","Non-Alcoholic"))
mosaicplot(que1tb2,color=TRUE,main="Alcohol Addiction Vs. General Health",xlab="Addiction State",ylab="General Health State")
que1tb2 <- table(que1db$drnkany5,que1db$X_rfhlth)
dimnames(que1tb2) <- list(c("Healthy","Unhealthy"),c("Alcoholic","Non-Alcoholic"))
mosaicplot(que1tb2,color=TRUE,main="Alcohol Addiction Vs. General Health",xlab="Addiction State",ylab="General Health State")
que1tb2 <- table(que1db$drnkany5,que1db$X_rfhlth)
que1tb2
que1tb2''
que1tb2'
g
a
d
s
fdsf)()
sdq[wq]
''
transpose(que1tb2)
que1tb2 <- table(que1db$X_rfhlth,que1db$drnkany5)
dimnames(que1tb2) <- list(c("Healthy","Unhealthy"),c("Alcoholic","Non-Alcoholic"))
mosaicplot(que1tb2,color=TRUE,main="Alcohol Addiction Vs. General Health",xlab="Addiction State",ylab="General Health State")
que1tb2 <- table(que1db$X_rfhlth,que1db$drnkany5)
que1tb2
rm(que1tb)
que1tb1 <- table(que1db$X_smoker3,que1db$X_rfhlth)
dimnames(que1tb1) <- list(c("Healthy","Unhealthy"),c("4","3","2","1"))
mosaicplot(que1tb1,color=TRUE,main="Smoking Level Vs. General Health",xlab="Smoking level in decreasing order",ylab="General Health State")
que1tb1 <- table(que1db$X_smoker3,que1db$X_rfhlth)
dimnames(que1tb1) <- list(c("4","3","2","1"),c("Healthy","Unhealthy"))
mosaicplot(que1tb1,color=TRUE,main="Smoking Level Vs. General Health",xlab="Smoking level in decreasing order",ylab="General Health State")
que1tb2 <- table(que1db$drnkany5,que1db$X_rfhlth)
dimnames(que1tb2) <- list(c("Alcoholic","Non-Alcoholic"),c("Healthy","Unhealthy"))
mosaicplot(que1tb2,color=TRUE,main="Alcohol Addiction Vs. General Health",xlab="Addiction State",ylab="General Health State")
que1tb2 <- table(que1db$drnkany5,que1db$X_rfhlth)
que1tb2
que1tb2 <- table(que1db$drnkany5,que1db$X_rfhlth)
dimnames(que1tb2) <- list(c("Non-Alcoholic","Alcoholic"),c("Healthy","Unhealthy"))
mosaicplot(que1tb2,color=TRUE,main="Alcohol Addiction Vs. General Health",xlab="Addiction State",ylab="General Health State")
brfss2013 %>%
group_by(X_rfhlth) %>%
summarise(n())
brfss2013 %>%
group_by(X_rfbmi5) %>%
summarise(n())
brfss2013 %>%
group_by(sleptim1) %>%
summarise(n())
que2db <- brfss2013 %>%
filter(!is.na(X_rfhlth),!is.na(X_rfbmi5),!is.na(sleptim1),is.numeric(sleptim1)<11) %>%
select(sleptim1,X_rfbmi5,X_rfhlth)
que2db %>%
group_by(sleptim1) %>%
summarise(n())
que2db <- brfss2013 %>%
filter(!is.na(X_rfhlth),!is.na(X_rfbmi5),!is.na(sleptim1),as.numeric(sleptim1)<11) %>%
select(sleptim1,X_rfbmi5,X_rfhlth)
que2db %>%
group_by(sleptim1) %>%
summarise(n())
brfss2013 %>%
group_by(X_rfhype5) %>%
summarise(n())
brfss2013 %>%
group_by(X_totinda) %>%
summarise(n())
que3db <- brfss2013 %>%
filter(!is.na(X_rfhype5),!is.na(X_totinda)) %>%
select(X_rfhype5,X_totinda)
que3tb1 <- table(que3db$X_totinda,que3db$X_rfhype5)
que3tb1
?rnorm
s<-5
s*10
clear
library(datasets)
rm(list = ls())
data("iris")
str(iris)
View(iris)
lapply(split(iris,Species),mean,Sepal.Length)
lapply(split(iris,iris$Species),mean,Sepal.Length)
lapply(split(iris,iris$Species),function(elt) mean(elt$Sepal.Length))
lapply(split(iris,iris$Species),mean)
library(mtcars)
data("mtcars")
?mtcars
str(mtcars)
View(mtcars)
mean(mtcars$mpg, mtcars$cyl)
sapply(mtcars, cyl, mean)
tapply(mtcars$mpg, mtcars$cyl, mean)
lapply(mtcars, mean)
apply(mtcars, 2, mean)
with(mtcars, tapply(mpg, cyl, mean))
with(mtcars, tapply(hp, cyl, mean))
abs(82.63636-209.21429)
debug(ls)
debug(ls)
ls
ls()
n
n
exit
exit()
w+5
debug(ls)
ls()
install.packages("httr")
library(lattice)
library(datasets)
DB <- data("mtcars")
DB
rm(DB)
view(mtcars)
View(mtcars)
library(ggplot2)
histogram(data = mtcars, disp, fill = cyl)
histogram(disp, data = mtcars, fill = cyl)
qplot(disp, data = mtcars, fill = cyl)
qplot(drat, data = mtcars, fill = cyl)
qplot(mpg, data = mtcars, fill = cyl)
qplot(qsec, data = mtcars, fill = cyl)
qplot(wt, data = mtcars, fill = cyl)
qplot(wt, data = mtcars, fill = factor(cyl))
qplot(wt, data = mtcars, col = factor(cyl))
rm(list=ls())
library(nlme)
xyplot(weight ~ Time | Diet, BodyWeight)
data("airquality")
qplot(Wind, Ozone, data = airquality, facets = . ~ factor(Month))
airquality = transform(airquality, Month = factor(Month))
qplot(Wind, Ozone, data = airquality, facets = . ~ Month)
read.csv("C:/Users/Sandesh/Desktop/Regr Time series/ice_data.csv")
IDB <- read.csv("C:/Users/Sandesh/Desktop/Regr Time series/ice_data.csv")
View(IDB)
fit <- lm(IDB$Ice.Extent..1.000.000.sq.km.~Year)
fit <- lm(IDB$Ice.Extent..1.000.000.sq.km.~IDB$Year)
fit
summary(fit)
plot(IDB$Ice.Extent..1.000.000.sq.km.,IDB$Year)
pred <- predict(fit, newdata = as.data.frame(c(2017)))
plot(pred, IDB$Year)
plot(IDB$Ice.Extent..1.000.000.sq.km.,IDB$Year)
points(pred, IDB$Year,type = 'l')
plot(IDB$Year,IDB$Ice.Extent..1.000.000.sq.km.)
points(IDB$Year,pred,type = 'l')
IDB <- read.csv("C:/Users/Sandesh/Desktop/Regr Time series/data_1.csv")
hist(IDB$Y)
fit_1 <- lm(Y,X,data = IDB)
fit_1 <- lm(Y~X,data = IDB)
residual <- resid(fit_1)
qqnorm(residual)
?qqnorm
qqnorm(residual)
?resid
hist(IDB$Y)
hist(residual)
?resid
IDB2 <- read.csv("C:/Users/Sandesh/Desktop/Regr Time series/data_2.csv")
fit_2 <- lm(Y~X,data = IDB2)
residual2 <- resid(fit_2)
hist(residual2)
qqnorm(residual2)
?predict
?resid
I1 <- read.csv("C:/Users/Sandesh/Desktop/Regr Time series/instrument_1.csv")
I2 <- read.csv("C:/Users/Sandesh/Desktop/Regr Time series/instrument_2.csv")
I3 <- read.csv("C:/Users/Sandesh/Desktop/Regr Time series/instrument_3.csv")
I4 <- read.csv("C:/Users/Sandesh/Desktop/Regr Time series/instrument_4.csv")
View(I1)
par(mfrow = c(2,2))
plot(X,Y1,I1)
plot(X~Y,I1)
plot(X~Y1,I1)
plot(X~Y1,I2)
plot(X~Y2,I2)
plot(X~Y3,I3)
plot(X~Y4,I4)
par(mfrow = c(1,1))
rexp(100,0.1)
hist(rexp(100,0.1))
?rexp
hist(rexp(100,10))
hist(rexp(1000,10))
hist(rnorm(1000,-2,1))
?runif
runif(1000,3,5)
hist(runif(1000,3,5))
x <- c(0.18, -1.54, 0.42, 0.95)
x <- c(0.18, -1.54, 0.42, 0.95)
w <- c(2, 1, 3, 1)
mu = c(0.1471,0.0025,1.077,0.3)
sum(w*(x-mu[1])^2)
sum(w*(x-mu[2])^2)
sum(w*(x-mu[3])^2)
sum(w*(x-mu[4])^2)
sum(w*((x-mu[4])^2))
x <- c(0.8, 0.47, 0.51, 0.73, 0.36, 0.58, 0.57, 0.85, 0.44, 0.42)
y <- c(1.39, 0.72, 1.55, 0.48, 1.19, -1.59, 1.23, -0.65, 1.49, 0.05)
plot(x,y)
coef(lm(y~x))
coef(lm(y~x-1))
data("mtcars")
coef(lm(mpg~weight,data = mtcars))
coef(lm(mtcars$mpg~mtcars$weight))
names)mtcars
names(mtcars)
coef(lm(mpg~wt,data = mtcars))
x <- c(8.58, 10.46, 9.01, 9.64, 8.86)
(x[1]-mean(x))/sd(x)
x <- c(0.8, 0.47, 0.51, 0.73, 0.36, 0.58, 0.57, 0.85, 0.44, 0.42)
mean(x)
x <- c(0.8, 0.47, 0.51, 0.73, 0.36, 0.58, 0.57, 0.85, 0.44, 0.42)
> y <- c(1.39, 0.72, 1.55, 0.48, 1.19, -1.59, 1.23, -0.65, 1.49, 0.05)
x <- c(0.8, 0.47, 0.51, 0.73, 0.36, 0.58, 0.57, 0.85, 0.44, 0.42) y <- c(1.39, 0.72, 1.55, 0.48, 1.19, -1.59, 1.23, -0.65, 1.49, 0.05)
x <- c(0.8, 0.47, 0.51, 0.73, 0.36, 0.58, 0.57, 0.85, 0.44, 0.42)
y <- c(1.39, 0.72, 1.55, 0.48, 1.19, -1.59, 1.23, -0.65, 1.49, 0.05)
fit <- lm(y~x)
predict(fit, newdata = data.frame(x = newx))
newx <- c(0.1,0.2)
predict(fit, newdata = data.frame(x = newx))
plot(x,y)
lines(fit)
abline(y~x,method = lm)
abline(y~x,"lm")
lines(abline(y~x,"lm"))
?abline
abline(reg = fit)
x <- c(0.61, 0.93, 0.83, 0.35, 0.54, 0.16, 0.91, 0.62, 0.62)
y <- c(0.67, 0.84, 0.6, 0.18, 0.85, 0.47, 1.1, 0.65, 0.36)
x
y
coef(lm(y~x))
summary(lm(y~x))
data("mtcars")
fit <- lm(mpg~wt,data=mtcars)
sumcoef <- summary(fit)$coefficients
plot(wt,mpg,mtcars)
plot(mtcars$wt,mtcars$mpg)
abline(fit)
mean(mtcars$wt)
?mtcars
predict(fit, newdata = data.frame(c(3)))
predict(fit, newdata = data.frame(wt = c(3)))
fit <- lm(mpg~I(wt/2),data=mtcars)
plot(I(mtcars$wt/2),mtcars$mpg
)
ablie(fit)
abline(fit)
sumcoef <- summary(fit)$coefficients
sumcoef[2,1] - qt(0.975, df = fit$df)*sumcoef[2,2]
?barplot
?legend()
install.packages(leaflet)
install.packages("leaflet")
suppressPackageStartupMessages(library(dplyr))
library(dplyr)
library(leaflet)
set.seed(0)
x <- runif(1000,0,10)
hist(x,border = FALSE, col = "black")
x <- rnorm(1000,0,10)
hist(x,border = FALSE, col = "black")
?rhist
?hsit
?hist
hist(x,border = FALSE, col = "black",breaks=20)
hist(x,border = FALSE, col = "black",breaks=40)
x <- rnorm(1000,0,1)
hist(x,border = FALSE, col = "black",breaks=40)
hist(x,border = FALSE, col = "black",breaks=30)
hist(x,border = FALSE, col = "black",breaks=20)
sd(x)
mean(x)
?sample
a = c()
a
for (i = 1:100) a = cbind(a,sd(sample(x,100)))
for (i in 1:100) a = cbind(a,sd(sample(x,100)))
hist(a)
hist(a,border = FALSE, col = "black",breaks=20)
a = c()
for (i in 1:1000) a = cbind(a,sd(sample(x,100)))
hist(a,border = FALSE, col = "black",breaks=20)
?runif
x <- runif(1000,-10,+10)
for (i in 1:1000) a = cbind(a,sd(sample(x,100)))
hist(a,border = FALSE, col = "black",breaks=20)
x <- rexp(1000,1)
hist(x,border = F, col = "black", beaks = 20)
hist(x,border = F, col = "black", breaks = 20)
for (i in 1:1000) a = cbind(a,sd(sample(x,100)))
hist(a,border = FALSE, col = "black",breaks=20)
hist(a,border = FALSE, col = "black")
hist(a,border = FALSE, col = "black")
for (i in 1:1000) a = cbind(a,sd(sample(x,500)))
hist(a,border = FALSE, col = "black")
sd(x)
for (i in 1:1000) a = cbind(a,sd(sample(x,700)))
hist(a,border = FALSE, col = "black")
var(x)
var(x)*var(x)
sd(c(1,2,3,4,5,6))
var(c(1,2,3,4,5,6))
?sd
plot(a)
x = rnorm(1000,0,1)
for (i in 1:1000) a = cbind(a,sd(sample(x,100)))
plot(a)
plot(a,xlim = c(0.95,1.05))
plot(a,xlim = c(0.99,1.01))
plot(a,xlim = c(0.99,1.01),pch = 19)
hist(a)
a = c()
for (i in 1:1000) a = cbind(a,sd(sample(x,100)))
plot(a)
hist(a)
a = c()
x = runif(1000,0,1)
for (i in 1:1000) a = cbind(a,sd(sample(x,100)))
hist(a)
a = c()
x = rexp(1000,0,1)
x = rexp(1000,1)
hist(x)
for (i in 1:1000) a = cbind(a,sd(sample(x,100)))
hist(a)
hist(a)
for (i in 1:100) a = cbind(a,sd(sample(x,100)))
a = ()
a = c()
for (i in 1:100) a = cbind(a,sd(sample(x,100)))
hist(a)
for (i in 1:400) a = cbind(a,sd(sample(x,100)))
a = c()
for (i in 1:400) a = cbind(a,sd(sample(x,100)))
hist(a)
hist(a,xlim = c(0.6,1.6))
a = c()
for (i in 1:600) a = cbind(a,sd(sample(x,100)))
hist(a,xlim = c(0.6,1.6))
a = c()
for (i in 1:800) a = cbind(a,sd(sample(x,100)))
hist(a,xlim = c(0.6,1.6))
a = c()
for (i in 1:1000) a = cbind(a,sd(sample(x,100)))
hist(a,xlim = c(0.6,1.6))
a = c()
for (i in 1:5000) a = cbind(a,sd(sample(x,100)))
hist(a,xlim = c(0.6,1.6))
hist(a,xlim = c(0.6,1.6),breaks = 30)
hist(a,xlim = c(0.6,1.6),breaks = 50)
qnorm(0.95,0,1)
pnorm(0,0,1)
pnorm(0.1,0,1)
?drop
rbind(2:4,1:3,1:3)
c<-rbind(2:4,1:3,1:3)
drop(c)
install.packages("plotly")
data("freeny")
str(freeny)
library(plotly)
plot_ly(freeny, x = price.index, y = income.level, z = market.potential, type = "scatter3d", color = lag.quarterly.revenue)
freeny$price.index
plot_ly(freeny, x = price.index, y = income.level, z = market.potential, type = "scatter3d", color = lag.quarterly.revenue)
plot_ly(x = freeny$price.index, y = freeny$income.level, z = freeny$market.potential, type = "scatter3d", color = freeny$lag.quarterly.revenue)
data("airquality")
rm(list = ls())
data("airquality")
str(AirPassengers)
str(airquality)
plot_ly(airquality, x = Temp, y = Solar.R, mode = "markers", color = factor(Month))
airquality %>% plot_ly( x = Temp, y = Solar.R, mode = "markers", color = factor(Month))
?plotly
?plot_ly
airquality %>% plot_ly( x = ~Temp, y = ~Solar.R, mode = "markers", color = factor(~Month))
airquality %>% plot_ly( x = ~Temp, y = ~Solar.R, color = factor(~Month))
plot_ly(airquality,  x = ~Temp, y = ~Solar.R, color = factor(~Month))
c = c(4,5,6,7,8,4,5,6)
factor(c)
plot_ly(airquality,  x = ~Temp, y = ~Solar.R)
plot_ly(airquality,  x = ~Temp, y = ~Solar.R, mode = "markers")
plot_ly(airquality,  x = ~Temp, y = ~Solar.R, type = "scatter")
plot_ly(airquality,  x = ~Temp, y = ~Solar.R, mode = "scatter")
plot_ly(airquality,  x = ~Temp, y = ~Solar.R, type = "scatter")
plot_ly(airquality,  x = ~Temp, y = ~Solar.R, type = "scatter",mode = "markers")
Color = factor(airquality$Month)
plot_ly(airquality,  x = ~Temp, y = ~Solar.R, type = "scatter",mode = "markers", color = Color)
?factor
Color = factor(airquality$Month, labels = c("May","June","July","August","September"))
head(Color)
plot_ly(airquality,  x = ~Temp, y = ~Solar.R, type = "scatter",mode = "markers", color = Color)
plot_ly(airquality,  x = ~Temp, y = ~Solar.R, type = "scatter",mode = "markers", color = Color, size = ~Wind)
knitr::opts_chunk$set(echo = FALSE)
suppressPackageStartupMessages(library(plotly))
data("airquality")
Color = factor(airquality$Month, labels = c("May","June","July","August","September"))
suppressWarnings(plot_ly(airquality,  x = ~Temp, y = ~Solar.R, type = "scatter",mode = "markers", color = Color, size = ~Wind))
d <- diamonds[sample(nrow(diamonds), 1000), ]
View(d)
plot_ly(d, x = ~carat, y = ~price, color = ~carat, size = ~carat, text = ~paste(“Clarity: ”, clarity))
plot_ly(d, x = ~carat, y = ~price, color = ~carat, size = ~carat, text = paste("Clarity: ", ~clarity))
?plot_ly
plot_ly(d, x = ~carat, y = ~price, color = ~carat, size = ~carat)
?selectInput
?shiny
library(shiny)
?selectInput
runApp('C:/Users/Sandesh/Desktop/Coursera/Developing Data Products/distrostats')
runApp('C:/Users/Sandesh/Desktop/Coursera/Developing Data Products/distrostats')
?radioButtons
?qnorm
?rexp
?rpois
?rbinom
?conditionalPanel
?textInput
?rbinom
rbinom(50, prob = 0.5)
rbinom(c("heads","tails"),50, prob = 0.5)
rbinom(c("heads","tails"),50, prob = 0.5)
runApp('C:/Users/Sandesh/Desktop/Coursera/Developing Data Products/distrostats')
?dnorm
pnorm(0.2)
qnorm(0,2)
qnorm(0.2)
qnorm(05)
qnorm(0.5)
pnorm(0.5)
rbinom(250, 0.3)
?rbinom
?dt
?dnorm()
set.seed(3000)
xseq<-seq(-4,4,.01)
densities<-dnorm(xseq, 0,1)
cumulative<-pnorm(xseq, 0, 1)
randomdeviates<-rnorm(1000,0,1)
plot(xseq,densities)
plot(xseq,densities,type = l)
plot(xseq,densities,type = "l")
densities<-dnorm(xseq, 6,1)
plot(xseq,densities,type = "l")
shiny::runApp('C:/Users/Sandesh/Desktop/Coursera/Developing Data Products/distrostats')
runApp('C:/Users/Sandesh/Desktop/Coursera/Developing Data Products/distrostats')
densities<-dnorm(xseq, 6,0)
plot(xseq,densities,type = "l")
runApp('C:/Users/Sandesh/Desktop/Coursera/Developing Data Products/distrostats')
runApp('C:/Users/Sandesh/Desktop/Coursera/Developing Data Products/distrostats')
runApp('C:/Users/Sandesh/Desktop/Coursera/Developing Data Products/distrostats')
runApp('C:/Users/Sandesh/Desktop/Coursera/Developing Data Products/distrostats')
